<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Catch Game</title>
  <style>
    body { margin: 0; overflow: hidden; background: #222; }
    #gameArea { position: relative; width: 100vw; height: 100vh; }
    #basket {
      position: absolute;
      bottom: 20px;
      left: 50vw;
      width: 100px;
      height: 30px;
      background: orange;
      border-radius: 15px;
      cursor: grab;
      user-select: none;
      transform: translateX(-50%);
    }
    .falling {
      position: absolute;
      width: 30px;
      height: 30px;
      background: #4af;
      border-radius: 50%;
      top: 0;
    }
    #score {
      position: absolute;
      top: 10px;
      left: 10px;
      color: #fff;
      font-size: 24px;
      font-family: sans-serif;
    }
    #gameOver {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: #fff;
      font-size: 48px;
      font-family: sans-serif;
      display: none;
    }
  </style>
</head>
<body>
  <div id="gameArea">
    <div id="score">Score: 0</div>
    <div id="basket"></div>
    <div id="gameOver">Game Over!<br><button onclick="location.reload()">Restart</button></div>
  </div>
  <script>
    const gameArea = document.getElementById('gameArea');
    const basket = document.getElementById('basket');
    const scoreEl = document.getElementById('score');
    const gameOverEl = document.getElementById('gameOver');
    let basketX = window.innerWidth / 2 - 50;
    let dragging = false;
    let score = 0;
    let gameRunning = true;

    // Drag logic
    basket.addEventListener('mousedown', e => {
      dragging = true;
    });
    document.addEventListener('mouseup', e => {
      dragging = false;
    });
    document.addEventListener('mousemove', e => {
      if (dragging && gameRunning) {
        basketX = Math.max(0, Math.min(window.innerWidth - 100, e.clientX - 50));
        basket.style.left = basketX + 'px';
      }
    });

    // Touch support
    basket.addEventListener('touchstart', e => {
      dragging = true;
      e.preventDefault();
    });
    document.addEventListener('touchend', e => {
      dragging = false;
    });
    document.addEventListener('touchmove', e => {
      if (dragging && gameRunning) {
        const touch = e.touches[0];
        basketX = Math.max(0, Math.min(window.innerWidth - 100, touch.clientX - 50));
        basket.style.left = basketX + 'px';
      }
    });

    // Falling objects
    function spawnFalling() {
      if (!gameRunning) return;
      const obj = document.createElement('div');
      obj.className = 'falling';
      obj.style.left = Math.random() * (window.innerWidth - 30) + 'px';
      gameArea.appendChild(obj);

      let y = 0;
      function fall() {
        if (!gameRunning) return;
        y += 4 + score * 0.2;
        obj.style.top = y + 'px';

        // Collision
        const objRect = obj.getBoundingClientRect();
        const basketRect = basket.getBoundingClientRect();
        if (
          objRect.bottom >= basketRect.top &&
          objRect.left < basketRect.right &&
          objRect.right > basketRect.left &&
          objRect.bottom <= basketRect.bottom + 30
        ) {
          score++;
          scoreEl.textContent = 'Score: ' + score;
          obj.remove();
          return;
        }

        // Missed
        if (y > window.innerHeight) {
          gameOver();
          obj.remove();
          return;
        }
        requestAnimationFrame(fall);
      }
      fall();
    }

    function gameOver() {
      gameRunning = false;
      gameOverEl.style.display = 'block';
    }

    // Game loop
    function gameLoop() {
      if (!gameRunning) return;
      spawnFalling();
      setTimeout(gameLoop, Math.max(600 - score * 20, 200));
    }

    // Start
    basket.style.left = basketX + 'px';
    gameLoop();
  </script>
</body>
</html>
