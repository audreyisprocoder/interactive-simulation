<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Fruit Catcher Game</title>
  <style>
    body { margin: 0; overflow: hidden; background: #222; }
    #gameArea { position: relative; width: 100vw; height: 100vh; }
    #player {
      position: absolute;
      bottom: 20px;
      left: 50vw;
      width: 80px;
      height: 80px;
      background: #f9c784;
      border-radius: 50% 50% 60% 60%;
      border: 4px solid #b97a56;
      box-shadow: 0 8px 16px #0008;
      cursor: grab;
      user-select: none;
      transform: translateX(-50%);
      display: flex;
      align-items: flex-end;
      justify-content: center;
      font-size: 40px;
      font-family: sans-serif;
    }
    .fruit {
      position: absolute;
      width: 40px;
      height: 40px;
      top: 0;
      font-size: 32px;
      text-align: center;
      line-height: 40px;
      user-select: none;
    }
    #score {
      position: absolute;
      top: 10px;
      left: 10px;
      color: #fff;
      font-size: 24px;
      font-family: sans-serif;
    }
    #gameOver {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: #fff;
      font-size: 48px;
      font-family: sans-serif;
      display: none;
      text-align: center;
    }
  </style>
</head>
<body>
  <div id="gameArea">
    <div id="score">Score: 0</div>
    <div id="player">😋</div>
    <div id="gameOver">Game Over!<br><button onclick="location.reload()">Restart</button></div>
  </div>
  <script>
    window.location.href = "catch-game.html";
    const fruits = [
      {emoji: '🍊', name: 'orange'},
      {emoji: '🍎', name: 'apple'},
      {emoji: '🍇', name: 'grapes'}
    ];
    const gameArea = document.getElementById('gameArea');
    const player = document.getElementById('player');
    const scoreEl = document.getElementById('score');
    const gameOverEl = document.getElementById('gameOver');
    let playerX = window.innerWidth / 2 - 40;
    let dragging = false;
    let score = 0;
    let gameRunning = true;

    // Drag logic
    player.addEventListener('mousedown', e => { dragging = true; });
    document.addEventListener('mouseup', e => { dragging = false; });
    document.addEventListener('mousemove', e => {
      if (dragging && gameRunning) {
        playerX = Math.max(0, Math.min(window.innerWidth - 80, e.clientX - 40));
        player.style.left = playerX + 'px';
      }
    });
    // Touch support
    player.addEventListener('touchstart', e => { dragging = true; e.preventDefault(); });
    document.addEventListener('touchend', e => { dragging = false; });
    document.addEventListener('touchmove', e => {
      if (dragging && gameRunning) {
        const touch = e.touches[0];
        playerX = Math.max(0, Math.min(window.innerWidth - 80, touch.clientX - 40));
        player.style.left = playerX + 'px';
      }
    });

    // Fruit falling logic
    function spawnFruit() {
      if (!gameRunning) return;
      const fruit = fruits[Math.floor(Math.random() * fruits.length)];
      const fruitDiv = document.createElement('div');
      fruitDiv.className = 'fruit';
      fruitDiv.textContent = fruit.emoji;
      fruitDiv.style.left = Math.random() * (window.innerWidth - 40) + 'px';
      gameArea.appendChild(fruitDiv);
      let y = 0;
      function fall() {
        if (!gameRunning) return;
        y += 4 + score * 0.2;
        fruitDiv.style.top = y + 'px';
        // Collision
        const fruitRect = fruitDiv.getBoundingClientRect();
        const playerRect = player.getBoundingClientRect();
        if (
          fruitRect.bottom >= playerRect.top &&
          fruitRect.left < playerRect.right &&
          fruitRect.right > playerRect.left &&
          fruitRect.bottom <= playerRect.bottom + 40
        ) {
          score++;
          scoreEl.textContent = 'Score: ' + score;
          fruitDiv.remove();
          return;
        }
        // Missed
        if (y > window.innerHeight) {
          gameOver();
          fruitDiv.remove();
          return;
        }
        requestAnimationFrame(fall);
      }
      fall();
    }
    function gameOver() {
      gameRunning = false;
      gameOverEl.style.display = 'block';
    }
    // Game loop
    function gameLoop() {
      if (!gameRunning) return;
      spawnFruit();
      setTimeout(gameLoop, Math.max(700 - score * 20, 250));
    }
    // Start
    player.style.left = playerX + 'px';
    gameLoop();
  </script>
</body>
</html>
